
// <%= serviceName %>-model.<%- js %> - A Mongoose model for a user entity
<%- tplTsOnly([`import { App } from './app.interface'${sc}`, '']) -%>
//
// See http://mongoosejs.com/docs/models.html
// for more of what you can do here.
<%- insertFragment('schema', [
  tplImports('mongooseSchema', `../services/${kebabName}/${kebabName}.mongoose`)
]) %>
<%- insertFragment('imports') %>
<%- insertFragment('init') %>

<%- tplModuleExports(null, 'function (app) {', 'function (app: App) {') %>
  let mongooseClient = app.get('mongooseClient')<%- sc %>
  <%- insertFragment('func_init') %>

  <%- insertFragment('client', [
    `  const ${camelName} = new mongooseClient.Schema(mongooseSchema, { timestamps: true })${sc}`,
  ]) %>

  let returns = mongooseClient.model('<%= camelName %>', <%= camelName %>)<%- sc %>

  <%- insertFragment('func_return') %>
  return returns<%- sc %>
}<%- sc %>
<%- insertFragment('more') %>

<%- insertFragment('exports') %>
<%- `${tplExport('moduleExports')}${sc}` %>

<%- insertFragment('funcs') %>
<%- insertFragment('end') %>
