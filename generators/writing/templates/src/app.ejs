
// Configure Feathers app. (Can be re-generated.)
<%- tplImports('path', 'path', 'as') %>
<%- tplImports('favicon', 'serve-favicon', 'req') %>
<%- tplImports('compress', 'compression', 'req') %>
<%- tplImports('cors', null, 'req') %>
<%- tplImports('helmet', null, 'req') %>
<%- tplImports('logger', 'winston', 'as') %>

<%- tplImports('feathers', '@feathersjs/feathers') %>
<%- tplImports('configuration', '@feathersjs/configuration') %>
<%# -%>
<%# --- if-1 starts below. -%>
<% if (isJs) { -%>
const express = require('@feathersjs/express')<%- sc %>
<% } else {%>
import express, { json, errorHandler, notFound, rest, static as _static, urlencoded } from '@feathersjs/express'<%- sc %>
<% } -%>
<%# --- if-1 ends above. -%>
<%- hasProvider('socketio') ? tplImports('socketio', '@feathersjs/socketio') : '' %>
<%- hasProvider('primus') ? tplImports('primus', '@feathersjs/primus') : '' %>
<%- tplImports('middleware', './middleware') %>
<%- tplImports('services', './services') %>
<%- tplImports('appHooks', './app.hooks') %>
<%- tplImports('channels', './channels') %>
<%# -%>
<%# --- if-2 starts below. -%>
<% if (specs.authentication) { -%>
<%- tplImports('authentication', './authentication') %>
<% } -%>
<%# --- if-2 ends above. -%>

<%# -%>
<%# --- forEach-1 starts below. -%>
<% Object.keys(specs._adapters || []).sort().forEach(__adapter => {
  __temp = specs._adapters[__adapter];
  __module = __temp.substring(0, __temp.length - 4);
-%>
const <%- __adapter %> = require('./<%- __module %>')<%- sc %>
<% }) -%>
<%# --- forEach-1 ends above. -%>
<%- insertFragment('imports') %>
<%- insertFragment('init') %>

const app = express(feathers())<%- sc %>
<%- insertFragment('use_start') %>

// Load app configuration
app.configure(configuration())<%- sc %>
// Enable CORS, security, compression, favicon and body parsing
app.use(cors())<%- sc %>
app.use(helmet())<%- sc %>
app.use(compress())<%- sc %>
app.use(<%- isJs ? 'express.' : '' -%>json())<%- sc %>
app.use(<%- isJs ? 'express.' : '' -%>urlencoded({ extended: true }))<%- sc %>
app.use(favicon(path.join(app.get('public'), 'favicon.ico')))<%- sc %>
// Host the public folder
app.use('/', <%- isJs ? 'express.static' : '_static' -%>(app.get('public')))<%- sc %>
<%- insertFragment('use_end') %>

// Set up Plugins and providers
<%- insertFragment('config_start') %>
<%- hasProvider('rest') ? `app.configure(${isJs ? 'express.' : '' }rest())${sc}` : '' %>
<%- hasProvider('socketio') ? `app.configure(socketio())${sc}` : '' %>
<%- hasProvider('primus') ? `app.configure(primus({ transformer: 'websockets' }))${sc}` : '' %>
<%# --- forEach-3 starts below. -%>
<% Object.keys(specs._adapters || []).sort().forEach((__adapter, __i) => { -%>
<%- __i === 0 ? '// Configure database adapters\n' : '' -%>
app.configure(<%- __adapter %>)<%- sc %>
<% }) -%>
<%# --- forEach-3 ends above. -%>

// Configure other middleware (see `middleware/index.<%- js %>`)
app.configure(middleware)<%- sc %>
// Set up our services (see `services/index.<%- js %>`)
app.configure(services)<%- sc %>
// Set up event channels (see channels.<%- js %>)
app.configure(channels)<%- sc %>
<%# -%>
<%# --- if-2 starts below. -%>
<% if (specs.authentication) { -%>
// Configure authentication (see `authentication.<%- js %>`)
app.configure(authentication)<%- sc %>
<% } -%>
<%# --- if-2 ends above. -%>
<%- insertFragment('config_middle') %>

// Configure a middleware for 404s and the error handler
app.use(<%- isJs ? 'express.' : '' -%>notFound())<%- sc %>
app.use(<%- isJs ? 'express.' : '' -%>errorHandler({ logger }))<%- sc %>
<%- insertFragment('config_end') %>

app.hooks(appHooks)<%- sc %>

const moduleExports = app<%- sc %>
<%- insertFragment('exports') %>
<%- `${tplExport('moduleExports')}${sc}` %>

<%- insertFragment('funcs') %>
<%- insertFragment('end') %>
