
// Initializes the `<%= serviceName %>` service on path `/<%= path %>`
<%- tplTsOnly([`import { App } from '../../app.interface'${sc}`, '', '']) -%>
const createService = require('feathers-rethinkdb')<%- sc %>
const hooks = require('./<%= kebabName %>.hooks')<%- sc %>
<%- insertFragment('rethink_imports') %>
<%- insertFragment('rethink_init') %>

<%- tplModuleExports(null, 'function (app) {', 'function (app: App) {') %>
  let Model = app.get('rethinkdbClient')<%- sc %>
  let paginate = app.get('paginate')<%- sc %>
  <%- insertFragment('rethink_func_init') %>

  const options = {
    name: '<%= snakeName %>',
    Model,
    paginate
  }<%- sc %>

  // Initialize our service with any options it requires
  app.use('/<%= path %>', createService(options))<%- sc %>

  // Get our initialized service so that we can register hooks and filters
  const service = app.service('<%= path %>')<%- sc %>

  service.hooks(hooks)<%- sc %>
  <%- insertFragment('rethink_func_return') %>
}<%- sc %>
<%- insertFragment('rethink_more') %>

<%- insertFragment('rethink_exports') %>
<%- `${tplExport('moduleExports')}${sc}` %>

<%- insertFragment('rethink_funcs') %>
<%- insertFragment('rethink_end') %>