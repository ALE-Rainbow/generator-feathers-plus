
// Initializes the `<%= serviceName %>` service on path `/<%= path %>`
const createService = require('feathers-mongodb');
const hooks = require('./<%= kebabName %>.hooks');
<%- insertFragment('mongo_imports', [
  'let $jsonSchema = require(\'./${kebabName}.mongo\');'
]) %>
<%- insertFragment('mongo_init') %>

let moduleExports = function (app) {
  let paginate = app.get('paginate');
  let mongoClient = app.get('mongoClient');
  let options = { paginate };
  <%- insertFragment('mongo_func_init') %>

  // Initialize our service with any options it requires
  app.use('/<%= path %>', createService(options));

  // Get our initialized service so that we can register hooks and filters
  const service = app.service('<%= path %>');

  mongoClient.then(db => {
    return db.createCollection('<%= kebabName %>', {
      <%- insertFragment('mongo_create_collection', [
        'validator: { $jsonSchema: $jsonSchema },',
        'validationLevel: \'strict\', // The MongoDB default',
        'validationAction: \'error\', // The MongoDB default',
      ]) %>
    });
  })
    .then(serviceModel => {
      service.Model = serviceModel;
    });

  service.hooks(hooks);
  <%- insertFragment('mongo_func_return') %>
};
<%- insertFragment('mongo_more') %>

<%- insertFragment('mongo_exports') %>
module.exports = moduleExports;

<%- insertFragment('mongo_funcs') %>
<%- insertFragment('mongo_end') %>
