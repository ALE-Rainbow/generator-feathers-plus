
// <%= serviceName %>-model.js - A Sequelize model
//
// See http://docs.sequelizejs.com/en/latest/docs/models-definition/
// for more of what you can do here.
const Sequelize = require('sequelize');
const DataTypes = Sequelize.DataTypes;
<%- insertFragment('sequelize_imports') %>
<%- insertFragment('sequelize_init') %>

let moduleExports = function (app) {
  let sequelizeClient = app.get('sequelizeClient');
  <%- insertFragment('sequelize_func_init') %>

  const <%= camelName %> = sequelizeClient.define('<%= snakeName %>', {
    text: {
      type: DataTypes.STRING,
      allowNull: false
    }
  }, {
    hooks: {
      beforeCount(options) {
        options.raw = true;
      }
    }
  });

  <%= camelName %>.associate = function (models) { // eslint-disable-line no-unused-vars
    // Define associations here
    // See http://docs.sequelizejs.com/en/latest/docs/associations/
  };

  <%- insertFragment('sequelize_func_return') %>
  return <%= camelName %>;
};
<%- insertFragment('sequelize_more') %>

<%- insertFragment('sequelize_exports') %>
module.exports = moduleExports;

<%- insertFragment('sequelize_funcs') %>
<%- insertFragment('sequelize_end') %>
