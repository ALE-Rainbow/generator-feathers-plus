
// Hooks for service `<%= name %>`. (Can be re-generated.)
const commonHooks = require('feathers-hooks-common');
<%# -%>
<%# --- if-1 starts below. -%>
<% if (requiresAuth || isAuthEntityWithAuthentication) { -%>
const { authenticate } = require('@feathersjs/authentication').hooks;
<% } -%>
<%# --- if-1 ends above. -%>

<%# -%>
<%# --- if-2 starts below. -%>
<% if (isAuthEntityWithAuthentication && authentication.strategies.indexOf('local') !== -1) { -%>
const { hashPassword, protect } = require('@feathersjs/authentication-local').hooks;
<% } -%>
<%# --- if-2 ends above. -%>
<%- insertFragment('imports') %>

<%- insertFragment('used', [
  'const { iff } = commonHooks; // eslint-disable-line no-unused-vars'
]) %>
<%- insertFragment('init') %>

let moduleExports = {
  before: {
<%# -%>
<%# --- if/else-3 starts below. -%>
<% if (!isAuthEntityWithAuthentication) { -%>
    <%- insertFragment('before', [
      `    all: [${requiresAuth ? " authenticate('jwt') " : ''}],`,
      '    find: [],',
      '    get: [],',
      '    create: [],',
      '    update: [],',
      '    patch: [],',
      '    remove: [],',
    ]) %>
<% } else {
  __temp = authentication.strategies.indexOf('local') !== -1 ? ' hashPassword() ' : ''
-%>
    <%- insertFragment('before', [
      '    all: [],',
      "    find: [ authenticate('jwt') ],",
      '    get: [],',
      `    create: [${__temp}],`,
      `    update: [${__temp}],`,
      `    patch: [${__temp}],`,
      '    remove: []',
    ]) %>
<% } -%>
<%# --- if/else-3 ends above. -%>
  },

  after: {
<%# -%>
<%# --- if/else-4 starts below. -%>
<% if (!isAuthEntityWithAuthentication) { -%>
    <%- insertFragment('after', [
      '    all: [],',
      '    find: [],',
      '    get: [],',
      '    create: [],',
      '    update: [],',
      '    patch: [],',
      '    remove: [],',
    ]) %>
<% } else {
  __temp = !authentication.strategies.indexOf('local') !== -1 ? '' : [
    '',
          '      // Make sure the password field is never sent to the client',
          '      // Always must be the last hook',
          "       protect('password'),",
  ].join(EOL);
-%>
    <%- insertFragment('after', [
      `    all: [${__temp}],`,
      '    find: [],',
      '    get: [],',
      '    create: [],',
      '    update: [],',
      '    patch: [],',
      '    remove: [],',
    ]) %>
<% } -%>
<%# --- if/else-4 ends above. -%>
  },

  error: {
    <%- insertFragment('error', [
      '    all: [],',
      '    find: [],',
      '    get: [],',
      '    create: [],',
      '    update: [],',
      '    patch: [],',
      '    remove: [],',
    ]) %>
  },
  <%- insertFragment('moduleExports') %>
};

<%- insertFragment('exports') %>
module.exports = moduleExports;

<%- insertFragment('funcs') %>
<%- insertFragment('end') %>
