
<%- tplJsOnly([`${sc}${EOL}`]) -%>
<%- tplTsOnly([`${sc}${EOL}`]) -%>

<%- tplTsOnly() -%>
${tplTsOnly()}

<%- tplJsOrTs(
  ``,
  ``
) %>

<%- tplJsOrTs('', '') %>

<%- tplImports('', null) %>
<%- tplImports('', '') %>
<%- tplImports('', '', 'req') %>
<%- tplImports('', '', 'as') %>
<%- tplImports('', '', null, 'let') %>

// let moduleExports = ${valueTs || value}
<%- tplModuleExports(null, '', '') %>

// let moduleExports: ${type} = ${valueTs || value}
<%- tplModuleExports(type, '', '') %>

<%- tplExport('', '') %>




<%# -%>
<%# --- forEach-1 starts below. -%>
<% oauthProviders.forEach(provider => { -%>

<% }); %>
<%# --- forEach-1 ends above. -%>




<%# -%>
<%# --- if-1 starts below. -%>
<% if () { -%>

<% } -%>
<%# --- if-1 ends above. -%>


if (isJs)




<%- insertFragment('funcs') %>

<%- insertFragment('imports', [
    tplImports('logger', './hooks/logger'),
]) %>


lintRule: isJs ? 'eslint ' : 'tslint:',
lintDisable: isJs ?  'eslint-disable' : 'tslint:disable',
lintDisableUnused: isJs ? 'eslint-disable no-unused-vars' : 'tslint:disable no-unused-variable',
lintDisableNextLine: isJs ?  'eslint-disable-next-line' : 'tslint:disable-next-line',
lintDisableNextLineUnused: isJs ?
'eslint-disable-next-line no-unused-vars' : 'tslint:disable-next-line no-unused-variable',
ruleQuoteDisable: isJs ? 'quotes: 0' : 'disable:quotemark',1",
